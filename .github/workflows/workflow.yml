name: Deploy Next.js Frontend

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ vars.PROJECT_NAME }}

jobs:
  build-and-deploy:
    runs-on: self-hosted # Use a standard GitHub-hosted runner

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN is auto-generated

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # Tags the image with 'latest' and the Git commit SHA for versioning
          tags: ${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Step 1: Login to GHCR
            echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            
            # Step 2: Pull the latest image to ensure it's on the server
            docker pull ${{ env.IMAGE_NAME }}:latest
            
            # Step 3: Create or update the docker-compose.yml file
            cat << 'EOF' > ~/docker-compose.yml
            version: '3.8'
            services:
              frontend:
                image: ${{ env.IMAGE_NAME }}:latest
                container_name: ${{ vars.PROJECT_NAME }}
                restart: unless-stopped
                ports:
                  - "3000:3000"
            EOF
            
            # Step 4: Stop the old container and start the new one
            # The '--force-recreate' flag ensures that a new container is
            # created even if nothing in the configuration has changed.
            docker compose -f ~/docker-compose.yml up -d --force-recreate
            
            # Step 5: Clean up old, unused Docker images
            docker image prune -f